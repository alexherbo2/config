set-option global tabstop 4
set-option global indentwidth 4
set-option global BOM none

set-option global autoinfo command|onkey

set-option global ui_options ncurses_assistant=none

set-option global scrolloff 2,5

set-option global makecmd 'make --jobs=8'
set-option global grepcmd 'ag --filename --column --ignore tags'

# stop c and d from yanking
map global normal d \"_d
map global normal c \"_c

map -docstring "next grep match" global goto n <esc>:grep-next<ret>
map -docstring "previous grep match" global goto p <esc>:grep-prev<ret>

# tab/backtab to cycle through completions
hook global InsertCompletionShow .* %{
    map window insert <tab> <c-n>
    map window insert <backtab> <c-p>
}
hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <backtab> <c-p>
}

# use w to select current word
map global normal w <a-i>w
map global normal <a-w> <a-i>W
map global normal W ""
map global normal <a-W> ""

set-face Whitespace rgb:505050,default
set-face LineNumbersWrapped rgb:606060,default+i

hook global WinCreate .* %{
    add-highlighter number_lines -relative -hlcursor -separator ' '
    add-highlighter show_matching
    add-highlighter show_whitespaces
    add-highlighter dynregex '%reg{/}' 0:default,rgb:373b41
    add-highlighter wrap -word
}

define-command kakrc -docstring "Open kakrc" %{
    edit %sh{ printf %s ${XDG_CONFIG_HOME}/kak/kakrc }
}

# add heterogenous selection (could work better)
define-command search_add %{
    eval -save-regs / %{
        exec -save-regs '' Z
        prompt 'search add:' %{ exec -save-regs '' ':reg / ' %val{text} <ret>zN }
    }
}

#user mappings
map -docstring "clip-paste after" global user p '<a-!>xsel --output --clipboard<ret>'
map -docstring "clip-paste before" global user P '!xsel --output --clipboard<ret>'
map -docstring "clip-paste replace" global user R '|xsel --output --clipboard<ret>'
map -docstring "clip-yank" global user y '<a-|>xsel --input --clipboard<ret>'
map -docstring "search add" global user / :search_add<ret>
map -docstring "lf"  global user d ':lf<ret>'
map -docstring "itersel" global user i :interactive_itersel<ret>

source ~/.config/kak/interactive_itersel.kak
source ~/.config/kak/lf.kak
source ~/.config/kak/buflist.kak
source ~/.config/kak/idsession.kak
source ~/.config/kak/find.kak
try %{ source ~/prog/forks/kakoune/rc/extra/gdb.kak }
try %{ source ~/.config/kak/dayjob.kak }
